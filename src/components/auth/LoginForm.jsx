import { useState } from 'react'
import { useAuth } from '../../context/AuthContext'
import Card from '../ui/Card'
import Input from '../ui/Input'
import Button from '../ui/Button'
import { useToast } from '../toast/Toaster'

export default function LoginForm() {
  const { login } = useAuth()
  const { toast } = useToast()
  const [username, setU] = useState('')
  const [password, setP] = useState('')
  const [busy, setBusy] = useState(false)
  const [err, setErr] = useState('')

  async function submit(e) {
    e.preventDefault()
    setBusy(true)
    setErr('')
    try {
      await login(username, password)
      toast('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã')
      window.location.assign('/')
    } catch (e) {
      const map = {
        user_exists: '–õ–æ–≥–∏–Ω –∑–∞–Ω—è—Ç',
        invalid_username: '–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π',
        invalid_password: '–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π',
        invalid_credentials: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å',
        timeout: '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (—Ç–∞–π–º–∞—É—Ç)',
        network: '–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞',
        server_error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      }
      setErr(map[e.message] || e.message || '–û—à–∏–±–∫–∞')
    } finally {
      setBusy(false)
    }
  }

  return (
    <Card className="max-w-sm mx-auto mt-24 space-y-4">
      <h2 className="heading text-2xl">–í—Ö–æ–¥</h2>
      {err && <div className="text-red-400 text-sm">{err}</div>}
      <form onSubmit={submit} className="space-y-3">
        <Input placeholder="–õ–æ–≥–∏–Ω" value={username} onChange={(e) => setU(e.target.value)} />
        <Input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setP(e.target.value)}
        />
        <Button variant="primary" type="submit" disabled={busy} className="w-full">
          {busy ? '–í—Ö–æ–¥–∏–º‚Ä¶' : '–í–æ–π—Ç–∏'}
        </Button>
      </form>
      <div className="text-sm text-white/60">
        –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
        <a href="/register" className="underline">
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å
        </a>
      </div>
    </Card>
  )
}
